Domain PrestacaoServicos {
    Subdomain Usuarios_e_Pedidos
    Subdomain Servicos_e_Avaliacao
}

ContextMap {
    contains Usuarios_e_Pedidos
    contains Servicos_e_Avaliacao

    Usuarios_e_Pedidos Shared-Kernel Servicos_e_Avaliacao
}

BoundedContext Usuarios_e_Pedidos implements Usuarios_e_Pedidos {
    Aggregate Cliente {
        Entity Cliente {
            aggregateRoot
            -int id
            String nome
            String email
            String telefone
            Endereco endereco
            List<int> prestadoresFavoritos
        }
    }

    Aggregate Prestador {
        Entity Prestador {
            aggregateRoot
            -int id
            String nome
            String tipoServico
            String email
            String telefone
            Endereco endereco
        }
    }

    ValueObject Endereco {
        String rua
        String bairro
        String cidade
        String estado
    }

    Repository ClienteRepository {
        +save(cliente : Cliente) : void
        +findAll() : List<Cliente>
        +delete(cliente : Cliente) : void
    }

    Repository PrestadorRepository {
        +save(prestador : Prestador) : void
        +findByName(name : String) : List<int>
        +findById(id : int) : Prestador
        +findAll() : List<Prestador>
        +delete(prestador : Prestador) : void
    }

    Aggregate Pedido {
        Entity Pedido {
            aggregateRoot
            -int id
            int servicoId
            int prestadorId
            int clienteId
            date data
            StatusPedido status
        }

        ValueObject StatusPedido {
            Enum StatusPedido {
                PENDENTE,
                CONCLUIDO,
                CANCELADO
            }
        }
    }

    Repository PedidosRepository {
        +save(pedido : Pedido) : void
        +findByClientName(nome : String) : List<int>
        +findByPrestadorName(nome: String) : List<int>
        +findById(id : int) : Pedido
        +deleteById(id : int) : void
    }
}

BoundedContext Servicos_e_Avaliacao implements Servicos_e_Avaliacao {
    Aggregate PrestacaoServico {
        Entity PrestacaoServico {
            aggregateRoot
            -int id
            String descricao
            float valor
            String bairro
            String categoria
            int prestadorId
        }
    }

    Repository ServicosRepository {
        +save(servico : PrestacaoServico) : void
        +findByPrestadorName(nome: String) : List<PrestacaoServico>
        +findById(id : int) : PrestacaoServico
        +deleteById(id : int) : void
    }

    Aggregate Avaliacao {
        Entity Avaliacao {
            aggregateRoot
            -int id
            int prestadorId
            int clienteId
            float nota
            String comentario
            TipoAvaliacao tipoAvaliacao
        }

        ValueObject TipoAvaliacao {
            Enum TipoAvaliacao {
                CLIENTE_AVALIA_PRESTADOR,
                PRESTADOR_AVALIA_CLIENTE
            }
        }
    }

    Repository AvaliacaoRepository {
        +save(avaliacao : Avaliacao) : void
        +deleteById(id : int) : void
    }
}
